{"ast":null,"code":"var _jsxFileName = \"/home/hoangnd/source/OWS/RealTimeChat/chat_client/src/App.js\";\nimport React, { Component } from 'react';\nimport './styles/App.css';\nimport ChatContainer from './components/ChatContainer/ChatContainer';\nimport LoginForm from './components/LoginForm/LoginForm';\nimport * as websocket from 'websocket';\nimport * as Config from './Config';\nconst client = new websocket.w3cwebsocket('ws://127.0.0.1:8082');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.Login = (event, username, password) => {\n      client.send(JSON.stringify({\n        statuscode: Config.LOGIN_CODE,\n        username: username,\n        password: password\n      }));\n      event.preventDefault();\n    };\n\n    this.state = {\n      isLogin: false,\n      user: null\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n\n    client.onmessage = message => {\n      var messJSON = JSON.parse(message.data); //console.log(messJSON);\n\n      switch (messJSON.statuscode) {\n        case Config.LOGIN_CODE_SUCCESS:\n          if (this.state.isLogin === false) {\n            this.setState({\n              isLogin: true,\n              user: messJSON.data\n            });\n          }\n\n          break;\n\n        case Config.CHAT_CODE:\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    client.onclose = () => {\n      console.log(\"connection closed\");\n    };\n  }\n\n  render() {\n    return this.state.isLogin ? /*#__PURE__*/React.createElement(ChatContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    }) : /*#__PURE__*/React.createElement(LoginForm, {\n      login: this.Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 67\n      }\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/hoangnd/source/OWS/RealTimeChat/chat_client/src/App.js"],"names":["React","Component","ChatContainer","LoginForm","websocket","Config","client","w3cwebsocket","App","constructor","props","Login","event","username","password","send","JSON","stringify","statuscode","LOGIN_CODE","preventDefault","state","isLogin","user","UNSAFE_componentWillMount","onopen","console","log","onmessage","message","messJSON","parse","data","LOGIN_CODE_SUCCESS","setState","CHAT_CODE","onclose","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAO,KAAKC,SAAZ,MAA2B,WAA3B;AACA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AAEA,MAAMC,MAAM,GAAG,IAAIF,SAAS,CAACG,YAAd,CAA2B,qBAA3B,CAAf;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAC1BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkCnBC,KAlCmB,GAkCX,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,KAA+B;AACrCR,MAAAA,MAAM,CAACS,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAe;AACzBC,QAAAA,UAAU,EAAEb,MAAM,CAACc,UADM;AAEzBN,QAAAA,QAAQ,EAAEA,QAFe;AAGzBC,QAAAA,QAAQ,EAAEA;AAHe,OAAf,CAAZ;AAMAF,MAAAA,KAAK,CAACQ,cAAN;AACD,KA1CkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAEDC,EAAAA,yBAAyB,GAAE;AACzBlB,IAAAA,MAAM,CAACmB,MAAP,GAAgB,MAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,KAFD;;AAGArB,IAAAA,MAAM,CAACsB,SAAP,GAAoBC,OAAD,IAAa;AAC9B,UAAIC,QAAQ,GAAGd,IAAI,CAACe,KAAL,CAAWF,OAAO,CAACG,IAAnB,CAAf,CAD8B,CAE9B;;AACA,cAAOF,QAAQ,CAACZ,UAAhB;AACE,aAAKb,MAAM,CAAC4B,kBAAZ;AACE,cAAG,KAAKZ,KAAL,CAAWC,OAAX,KAAuB,KAA1B,EAAgC;AAC9B,iBAAKY,QAAL,CAAc;AACZZ,cAAAA,OAAO,EAAE,IADG;AAEZC,cAAAA,IAAI,EAAEO,QAAQ,CAACE;AAFH,aAAd;AAID;;AACD;;AACF,aAAK3B,MAAM,CAAC8B,SAAZ;AACE;;AACF;AAAS;AAXX;AAaD,KAhBD;;AAiBA7B,IAAAA,MAAM,CAAC8B,OAAP,GAAiB,MAAM;AACrBV,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,KAFD;AAGD;;AAYDU,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKhB,KAAL,CAAWC,OAAX,gBAAqB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,gBAAuD,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAKX,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9D;AACD;;AA/CyB;;AAkD5B,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './styles/App.css';\nimport ChatContainer from './components/ChatContainer/ChatContainer';\nimport LoginForm from './components/LoginForm/LoginForm'\nimport * as websocket from 'websocket'\nimport * as Config from './Config'\n\nconst client = new websocket.w3cwebsocket('ws://127.0.0.1:8082');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: false,\n      user: null\n    }\n  }\n\n  UNSAFE_componentWillMount(){\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n    client.onmessage = (message) => {\n      var messJSON = JSON.parse(message.data);\n      //console.log(messJSON);\n      switch(messJSON.statuscode){\n        case Config.LOGIN_CODE_SUCCESS:\n          if(this.state.isLogin === false){\n            this.setState({\n              isLogin: true,\n              user: messJSON.data\n            })\n          }\n          break;\n        case Config.CHAT_CODE:\n          break;\n        default: break;\n      }\n    };\n    client.onclose = () => {\n      console.log(\"connection closed\");\n    }\n  }\n\n  Login = (event, username, password) => {\n    client.send(JSON.stringify({\n      statuscode: Config.LOGIN_CODE,\n      username: username,\n      password: password\n    }));\n\n    event.preventDefault();\n  }\n\n  render() {\n    return this.state.isLogin ? <ChatContainer></ChatContainer> : <LoginForm login={this.Login}></LoginForm>;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}