{"ast":null,"code":"var _jsxFileName = \"/home/hoangnd/source/OWS/RealTimeChat/chat_client/src/App.js\";\nimport React, { Component } from 'react';\nimport './styles/App.css';\nimport ChatContainer from './components/ChatContainer/ChatContainer';\nimport LoginForm from './components/LoginForm/LoginForm';\nimport * as websocket from 'websocket';\nimport * as Config from './Config';\nconst client = new websocket.w3cwebsocket('ws://127.0.0.1:8082');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.Login = (event, username, password) => {\n      client.send(JSON.stringify({\n        statuscode: Config.LOGIN_CODE,\n        username: username,\n        password: password\n      }));\n      event.preventDefault();\n    };\n\n    this.CommitMessage = message => {\n      client.send(JSON.stringify({\n        statuscode: Config.CHAT_CODE,\n        userId: this.state.userDetail._id,\n        message: message\n      }));\n    };\n\n    this.state = {\n      isLogin: false,\n      userDetail: null,\n      messHistory: []\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n\n    client.onmessage = message => {\n      var messJSON = JSON.parse(message.data); //console.log(messJSON);\n\n      if (messJSON.statuscode === Config.LOGIN_CODE_SUCCESS) {\n        if (this.state.isLogin === false) {\n          this.setState({\n            isLogin: true,\n            userDetail: messJSON.userDetail,\n            messHistory: messJSON.messHistory\n          });\n        }\n      } else if (messJSON.statuscode === Config.CHAT_CODE) {\n        console.log(messJSON);\n        this.setState({\n          messHistory: [this.state.messHistory, messJSON.data]\n        });\n      }\n    };\n\n    client.onclose = () => {\n      console.log(\"connection closed\");\n    };\n  }\n\n  render() {\n    return this.state.isLogin ? /*#__PURE__*/React.createElement(ChatContainer, {\n      messHistory: this.state.messHistory,\n      username: this.state.userDetail.username,\n      commitMessage: this.CommitMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(LoginForm, {\n      login: this.Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/hoangnd/source/OWS/RealTimeChat/chat_client/src/App.js"],"names":["React","Component","ChatContainer","LoginForm","websocket","Config","client","w3cwebsocket","App","constructor","props","Login","event","username","password","send","JSON","stringify","statuscode","LOGIN_CODE","preventDefault","CommitMessage","message","CHAT_CODE","userId","state","userDetail","_id","isLogin","messHistory","UNSAFE_componentWillMount","onopen","console","log","onmessage","messJSON","parse","data","LOGIN_CODE_SUCCESS","setState","onclose","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './styles/App.css';\nimport ChatContainer from './components/ChatContainer/ChatContainer';\nimport LoginForm from './components/LoginForm/LoginForm'\nimport * as websocket from 'websocket'\nimport * as Config from './Config'\n\nconst client = new websocket.w3cwebsocket('ws://127.0.0.1:8082');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: false,\n      userDetail: null,\n      messHistory: []\n    }\n  }\n\n  UNSAFE_componentWillMount() {\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n    client.onmessage = (message) => {\n      var messJSON = JSON.parse(message.data);\n      //console.log(messJSON);\n      if (messJSON.statuscode === Config.LOGIN_CODE_SUCCESS) {\n        if (this.state.isLogin === false) {\n          this.setState({\n            isLogin: true,\n            userDetail: messJSON.userDetail,\n            messHistory: messJSON.messHistory\n          })\n        }\n      }\n      else if (messJSON.statuscode === Config.CHAT_CODE) {\n        console.log(messJSON);\n        this.setState({\n          messHistory: [this.state.messHistory, messJSON.data]\n        })\n      }\n    };\n    client.onclose = () => {\n      console.log(\"connection closed\");\n    }\n  }\n\n  Login = (event, username, password) => {\n    client.send(JSON.stringify({\n      statuscode: Config.LOGIN_CODE,\n      username: username,\n      password: password\n    }));\n\n    event.preventDefault();\n  }\n\n  CommitMessage = (message) => {\n    client.send(JSON.stringify({\n      statuscode: Config.CHAT_CODE,\n      userId: this.state.userDetail._id,\n      message: message\n    }));\n  }\n\n  render() {\n    return this.state.isLogin ?\n      <ChatContainer\n        messHistory={this.state.messHistory}\n        username={this.state.userDetail.username}\n        commitMessage={this.CommitMessage}\n      >\n      </ChatContainer>\n      :\n      <LoginForm login={this.Login}></LoginForm>;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}