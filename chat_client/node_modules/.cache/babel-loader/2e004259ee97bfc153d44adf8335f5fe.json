{"ast":null,"code":"var _jsxFileName = \"/home/hoangnd/source/OWS/RealTimeChat/chat_client/src/App.js\";\nimport React, { Component } from 'react';\nimport './styles/App.css';\nimport ChatContainer from './components/ChatContainer/ChatContainer';\nimport LoginForm from './components/LoginForm/LoginForm';\nimport * as websocket from 'websocket';\nimport * as Config from './Config';\nconst client = new websocket.w3cwebsocket('ws://127.0.0.1:8082');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.Login = (event, username, password) => {\n      client.send(JSON.stringify({\n        statuscode: Config.LOGIN_CODE,\n        username: username,\n        password: password\n      }));\n      event.preventDefault();\n    };\n\n    this.state = {\n      isLogin: false,\n      userDetail: null,\n      messHistory: []\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n\n    client.onmessage = message => {\n      var messJSON = JSON.parse(message.data); //console.log(messJSON);\n\n      if (messJSON.statuscode === Config.LOGIN_CODE_SUCCESS) {\n        if (this.state.isLogin === false) {\n          this.setState({\n            isLogin: true,\n            userDetail: messJSON.userDetail,\n            messHistory: messJSON.messHistory\n          });\n        }\n      } else if (messJSON.statuscode === Config.CHAT_CODE) {}\n    };\n\n    client.onclose = () => {\n      console.log(\"connection closed\");\n    };\n  }\n\n  CommitMessage(message) {\n    client.send(JSON.stringify({\n      statuscode: Config.CHAT_CODE,\n      data: {\n        userId: this.state.userDetail._id,\n        message: message\n      }\n    }));\n  }\n\n  render() {\n    return this.state.isLogin ? /*#__PURE__*/React.createElement(ChatContainer, {\n      messHistory: this.state.messHistory,\n      username: this.state.userDetail.username,\n      commitMessage: this.CommitMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(LoginForm, {\n      login: this.Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/hoangnd/source/OWS/RealTimeChat/chat_client/src/App.js"],"names":["React","Component","ChatContainer","LoginForm","websocket","Config","client","w3cwebsocket","App","constructor","props","Login","event","username","password","send","JSON","stringify","statuscode","LOGIN_CODE","preventDefault","state","isLogin","userDetail","messHistory","UNSAFE_componentWillMount","onopen","console","log","onmessage","message","messJSON","parse","data","LOGIN_CODE_SUCCESS","setState","CHAT_CODE","onclose","CommitMessage","userId","_id","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './styles/App.css';\nimport ChatContainer from './components/ChatContainer/ChatContainer';\nimport LoginForm from './components/LoginForm/LoginForm'\nimport * as websocket from 'websocket'\nimport * as Config from './Config'\n\nconst client = new websocket.w3cwebsocket('ws://127.0.0.1:8082');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: false,\n      userDetail: null,\n      messHistory: []\n    }\n  }\n\n  UNSAFE_componentWillMount() {\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n    client.onmessage = (message) => {\n      var messJSON = JSON.parse(message.data);\n      //console.log(messJSON);\n      if(messJSON.statuscode === Config.LOGIN_CODE_SUCCESS){\n        if (this.state.isLogin === false) {\n          this.setState({\n            isLogin: true,\n            userDetail: messJSON.userDetail,\n            messHistory: messJSON.messHistory\n          })\n        }\n      }\n      else if(messJSON.statuscode === Config.CHAT_CODE){\n\n      }\n    };\n    client.onclose = () => {\n      console.log(\"connection closed\");\n    }\n  }\n\n  Login = (event, username, password) => {\n    client.send(JSON.stringify({\n      statuscode: Config.LOGIN_CODE,\n      username: username,\n      password: password\n    }));\n\n    event.preventDefault();\n  }\n\n  CommitMessage(message){\n    client.send(JSON.stringify({\n      statuscode: Config.CHAT_CODE,\n      data: {\n        userId: this.state.userDetail._id,\n        message: message\n      }\n    }));\n  }\n\n  render() {\n    return this.state.isLogin ?\n      <ChatContainer\n        messHistory={this.state.messHistory} \n        username={this.state.userDetail.username}\n        commitMessage={this.CommitMessage}\n      >\n      </ChatContainer>\n      :\n      <LoginForm login={this.Login}></LoginForm>;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}